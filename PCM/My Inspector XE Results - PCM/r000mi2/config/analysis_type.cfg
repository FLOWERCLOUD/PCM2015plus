<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:int="http://www.w3.org/2001/XMLSchema#int">
 <internal>
  <id>mc2</id>
  <name>mc2.name</name>
  <shortName>mc2.name</shortName>
  <description>mc2.description</description>
  <alias>mi2</alias>
  <abbreviation>mi2</abbreviation>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">intel.che.nem.analysis_type_memory_pane_f3110</property>
  <property name="slowdown">10x-40x</property>
  <property name="memory_overhead_image">peak-m2</property>
  <property name="analysis_overhead_image">choice_2</property>
 </internal>
 <knobs>
  <booleanKnob id="detect_leaks_on_exit" cliName="detect-leaks-on-exit" displayName="knob.detect_leaks_on_exit.name">
   <description>knob.detect_leaks_on_exit.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="detect_resource_leaks" cliName="detect-resource-leaks" displayName="knob.detect_resource_leaks.name" boolean:visible="false">
   <description>knob.detect_resource_leaks.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <rule>
   <ruleExpr>$OS == Windows</ruleExpr>
   <booleanKnob idToOverwrite="detect_resource_leaks" boolean:visible="true"/>
  </rule>
  <booleanKnob id="resources" cliName="resources" displayName="knob.resources.name" boolean:visible="false">
   <description>knob.resources.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="enable_memory_growth_detection" cliName="enable-memory-growth-detection" displayName="knob.enable_memory_growth_detection.name">
   <description>knob.enable_memory_growth_detection.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="detect_leaks_on_demand" cliName="enable-on-demand-leak-detection" displayName="knob.detect_leaks_on_demand.name">
   <description>knob.detect_leaks_on_demand.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="still_allocated_memory" cliName="still-allocated-memory" displayName="knob.still_allocated_memory.name">
   <description>knob.still_allocated_memory.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <enumKnob id="stack_depth" cliName="stack-depth" displayName="knob.stack_depth.name">
   <description>knob.stack_depth.description</description>
   <values>
    <value displayName="knob.stack_depth.1">1</value>
    <value displayName="knob.stack_depth.8">8</value>
    <value displayName="knob.stack_depth.16">16</value>
    <value displayName="knob.stack_depth.24">24</value>
    <value displayName="knob.stack_depth.32">32</value>
    <defaultValue>8</defaultValue>
   </values>
  </enumKnob>
 </knobs>
 <analysis>
  <collector id="runmc">
   <binaryName>runmc</binaryName>
   <collectorKnob knob="cknob_still_allocated_memory">$still_allocated_memory</collectorKnob>
   <collectorKnob knob="cknob_detect_leaks_on_exit">$detect_leaks_on_exit</collectorKnob>
   <collectorKnob knob="cknob_detect_leaks_on_demand">$detect_leaks_on_demand</collectorKnob>
   <boolean:collectorKnob knob="cknob_detect_invalid_accesses">true</boolean:collectorKnob>
   <collectorKnob knob="cknob_enable_memory_growth_detection">$enable_memory_growth_detection</collectorKnob>
  </collector>
  <rules>
   <rule predicateType="and">
    <ruleExpr>$resources == true</ruleExpr>
    <ruleExpr>$detect_resource_leaks == true</ruleExpr>
    <collector idToAppend="runmc">
     <boolean:collectorKnob knob="cknob_detect_resource_leaks">true</boolean:collectorKnob>
    </collector>
   </rule>
   <else>
    <collector idToAppend="runmc">
     <boolean:collectorKnob knob="cknob_detect_resource_leaks">false</boolean:collectorKnob>
    </collector>
   </else>
   <rule>
    <ruleExpr>$stack_depth == 1</ruleExpr>
    <collector idToAppend="runmc">
     <int:collectorKnob knob="cknob_stack_depth">1</int:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 8</ruleExpr>
    <collector idToAppend="runmc">
     <int:collectorKnob knob="cknob_stack_depth">8</int:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 16</ruleExpr>
    <collector idToAppend="runmc">
     <int:collectorKnob knob="cknob_stack_depth">16</int:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 24</ruleExpr>
    <collector idToAppend="runmc">
     <int:collectorKnob knob="cknob_stack_depth">24</int:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 32</ruleExpr>
    <collector idToAppend="runmc">
     <int:collectorKnob knob="cknob_stack_depth">32</int:collectorKnob>
    </collector>
   </rule>
  </rules>
 </analysis>
</bag>
